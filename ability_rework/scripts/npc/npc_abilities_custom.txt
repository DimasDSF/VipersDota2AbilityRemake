// Dota Heroes File
"DOTAAbilities"
{
	"Version"		"1"
	
	//=================================================================================================================
	// VGMAR: Tower: Sniper: Take Aim
	//=================================================================================================================
	"tower_take_aim"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"BaseClass"						"sniper_take_aim"
		
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"						"FIELD_INTEGER"
				"bonus_attack_range"			"200 300 400 500"
			}
		}
	}
	
	//=================================================================================================================
	// VGMAR: Tower: Viper: Corrosive Skin
	//=================================================================================================================
	"tower_corrosive_skin"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"AbilityUnitDamageType"			"DAMAGE_TYPE_MAGICAL"	
		"SpellImmunityType"				"SPELL_IMMUNITY_ENEMIES_NO"
		"SpellDispellableType"			"SPELL_DISPELLABLE_YES"
		"AbilitySound"					"hero_viper.CorrosiveSkin"
		"BaseClass"						"viper_corrosive_skin"
		
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"					"FIELD_FLOAT"
				"duration"					"4.0 5.0 6.0 7.0"
			}
			"02"
			{
				"var_type"					"FIELD_INTEGER"
				"bonus_attack_speed"		"-10 -15 -20 -25"
			}
			"03"
			{
				"var_type"					"FIELD_INTEGER"
				"bonus_magic_resistance"	"0"
			}
			"04"
			{
				"var_type"					"FIELD_INTEGER"
				"damage"					"15 20 25 30"
			}
			"05"
			{
				"var_type"					"FIELD_INTEGER"
				"max_range_tooltip"					"1600"
			}
		}
	}
	
	//=================================================================================================================
	// VGMAR: Tower: Spectre: Dispersion
	//=================================================================================================================
	"tower_dispersion"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"SpellImmunityType"				"SPELL_IMMUNITY_ENEMIES_NO"
		"BaseClass"						"spectre_dispersion"
		
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"				"FIELD_INTEGER"
				"damage_reflection_pct"	"10 15 20 25"
			}
			"02"
			{
				"var_type"				"FIELD_INTEGER"
				"min_radius"			"300 300 300 300"
			}
			"03"
			{
				"var_type"				"FIELD_INTEGER"
				"max_radius"			"1500 1500 1500 1500"
			}			
		}
	}
	
	//=================================================================================================================
	// VGMAR: Tower: Underlord: Atrophy Aura
	//=================================================================================================================
	"tower_atrophy_aura"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_AURA"
		"AbilityUnitTargetTeam"			"DOTA_UNIT_TARGET_TEAM_ENEMY"
		"SpellDispellableType"			"SPELL_DISPELLABLE_NO"
		"BaseClass"						"abyssal_underlord_atrophy_aura"
		
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"						"FIELD_INTEGER"
				"radius"						"2000"
			}
			"02"
			{
				"var_type"						"FIELD_INTEGER"
				"damage_reduction_pct"			"10 15 20 25"
			}
			"03"
			{
				"var_type"						"FIELD_INTEGER"
				"bonus_damage_from_creep"		"5"
			}
			"04"
			{
				"var_type"						"FIELD_INTEGER"
				"bonus_damage_from_hero"		"30 35 40 45"
			}
			"05"
			{
				"var_type"						"FIELD_FLOAT"
				"bonus_damage_duration"			"30"
			}
			"06"
			{
				"var_type"						"FIELD_FLOAT"
				"bonus_damage_duration_scepter"		"30"
			}
		}
	}
	
	//=================================================================================================================
	// VGMAR: Tower: Huskar: Berserkers Blood
	//=================================================================================================================
	"tower_berserkers_blood"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"BaseClass"						"huskar_berserkers_blood"
		
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"						"FIELD_INTEGER"
				"maximum_attack_speed"			"120 160 200 240"
			}
			"02"
			{
				"var_type"						"FIELD_INTEGER"
				"maximum_resistance"			"0"
			}
			"03"
			{
				"var_type"						"FIELD_INTEGER"
				"hp_threshold_max"				"10"
			}
		}
	}
	
	//=================================================================================================================
	// VGMAR: Tower: Sven: Great Cleave
	//=================================================================================================================
	"tower_great_cleave"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"SpellImmunityType"				"SPELL_IMMUNITY_ENEMIES_YES"
		"BaseClass"						"sven_great_cleave"
		
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{						
			"01"
			{
				"var_type"				"FIELD_INTEGER"
				"cleave_starting_width"			"150"
			}			
			"02"
			{
				"var_type"				"FIELD_INTEGER"
				"cleave_ending_width"			"300"
			}			
			"03"
			{
				"var_type"				"FIELD_INTEGER"
				"cleave_distance"			"570 670 770 870"
			}
			"04"
			{
				"var_type"				"FIELD_INTEGER"
				"great_cleave_damage"	"25 50 75 100"
			}
		}
	}
	
	//=================================================================================================================
	// VGMAR: Tower: Kunkka: Tidebringer
	//=================================================================================================================
	"tower_tidebringer"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET | DOTA_ABILITY_BEHAVIOR_AUTOCAST | DOTA_ABILITY_BEHAVIOR_ATTACK"
		"AbilityUnitDamageType"			"DAMAGE_TYPE_PHYSICAL"	
		"AbilityUnitTargetTeam"			"DOTA_UNIT_TARGET_TEAM_ENEMY"
		"AbilityUnitTargetType"			"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
		"AbilityUnitTargetFlags"		"DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES"
		"SpellImmunityType"				"SPELL_IMMUNITY_ENEMIES_YES"
		"AbilitySound"					"Hero_Kunkka.Tidebringer.Attack"
		"BaseClass"						"kunkka_tidebringer"
		
		"AbilityCooldown"				"13.0"
		
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{		
			"01"
			{
				"var_type"				"FIELD_INTEGER"
				"cleave_starting_width"			"150"
			}			
			"02"
			{
				"var_type"				"FIELD_INTEGER"
				"cleave_ending_width"			"600 650 700 750"
			}			
			"03"
			{
				"var_type"				"FIELD_INTEGER"
				"cleave_distance"			"1250 1300 1450 1500"
			}
			"04"
			{
				"var_type"					"FIELD_INTEGER"
				"damage_bonus"				"5 10 15 20"
			}
			"05"
			{
				"var_type"					"FIELD_INTEGER"
				"cleave_damage"				"100"
			}
		}
	}
	
	//=================================================================================================================
	// VGMAR: Tower: Tusk: Walrus Punch
	//=================================================================================================================
	"tower_walrus_punch"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET | DOTA_ABILITY_BEHAVIOR_AUTOCAST | DOTA_ABILITY_BEHAVIOR_ATTACK"
		"AbilityUnitTargetTeam"			"DOTA_UNIT_TARGET_TEAM_ENEMY"
		"AbilityUnitTargetType"			"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
		"AbilityUnitTargetFlags"		"DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES"
		"SpellImmunityType"				"SPELL_IMMUNITY_ENEMIES_YES"
		"SpellDispellableType"			"SPELL_DISPELLABLE_YES"
		"AbilitySound"					"Hero_Tusk.WalrusPunch.Target"
		"BaseClass"						"tusk_walrus_punch"
		"MaxLevel"						"4"
		
		"AbilityCooldown"				"26.0"
		"AbilityManaCost"				"0"
		
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"					"FIELD_INTEGER"
				"crit_multiplier"			"150 250 350 450"
			}
			"02"
			{
				"var_type"					"FIELD_FLOAT"
				"air_time"					"1.0"
			}
			"03"
			{
				"var_type"					"FIELD_FLOAT"
				"slow_duration"				"0.0"
			}
			"04"
			{
				"var_type"					"FIELD_INTEGER"
				"move_slow"					"0"
			}
			"05"
			{
				"var_type"					"FIELD_INTEGER"
				"push_length"				"1000"
			}
		}
	}
	
	//============================
	//============================
	// VGMAR:Custom Util Abilities
	//============================
	//============================
	
	//=================================================================================================================
	// VGMAR: Venomancer: Plague Ward: Destroy
	//=================================================================================================================
	"vgmar_util_plague_ward_destroy"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE | DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_IMMEDIATE"
		"BaseClass"						"broodmother_spin_web_destroy"
		"AbilityTextureName" 			"venomancer_plague_ward"
		"MaxLevel"						"1"

		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"				"0"
		
		// Time		
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"0"
	
		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"0"
	}
	
	//==============================
	// Hidden Talent
	//==============================
	//=================================================================================================================
	// Ability: Special Bonus
	//=================================================================================================================
	"special_bonus_unique_hidden"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityType"					"DOTA_ABILITY_TYPE_ATTRIBUTES"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"BaseClass"						"special_bonus_unique_alchemist_3"
		
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"					"FIELD_FLOAT"
				"value"				"-0.0"
			}
		}
	}
	
	
	
	//==============================
	// VGMAR: Custom Creep Abilities
	//==============================
	
	//=================================================================================================================
	// VGMAR: Catapult: Faceless Void: TimeLock
	//=================================================================================================================
	"vgmar_c_siegetimelock"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"SpellDispellableType"			"SPELL_DISPELLABLE_NO"
		"BaseClass"						"faceless_void_time_lock"
		"MaxLevel"						"3"
		
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"				"FIELD_FLOAT"
				"duration"				"1.0"
			}
			"02"
			{
				"var_type"				"FIELD_FLOAT"
				"duration_creep"		"2.0"
			}
			"03"
			{
				"var_type"				"FIELD_INTEGER"
				"chance_pct"			"100"
			}
			"04"
			{
				"var_type"				"FIELD_INTEGER"
				"bonus_damage"			"25 50 75"
			}
		}
	}
	
	//============================
	//============================
	// VGMAR:ITEMABILITIES Section
	//============================
	//============================
	
	//=================================================================================================================
	// VGMAR: Midas: Alchemist: Goblin's Greed
	//=================================================================================================================
	"vgmar_i_goblins_greed"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"BaseClass"						"alchemist_goblins_greed"
		"MaxLevel"						"1"

		// Special	
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"				"FIELD_INTEGER"
				"duration"				"120"
			}
			"02"
			{
				"var_type"				"FIELD_INTEGER"
				"bonus_gold"			"1"
			}
			"03"
			{
				"var_type"				"FIELD_INTEGER"
				"bonus_bonus_gold"		"1"
			}
			"04"
			{
				"var_type"				"FIELD_INTEGER"
				"bonus_gold_cap"		"120"
			}
			"05"
			{
				"var_type"				"FIELD_FLOAT"
				"bounty_multiplier_tooltip"		"1.1"
			}
		}
	}
	//=================================================================================================================
	// VGMAR: Item: Bloodseeker: Thirst
	//=================================================================================================================
	"vgmar_i_thirst"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"SpellImmunityType"				"SPELL_IMMUNITY_ENEMIES_YES"
		"BaseClass"						"bloodseeker_thirst"
		"MaxLevel"						"1"

		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"					"FIELD_INTEGER"
				"min_bonus_pct"				"75"
			}			
			"02"
			{
				"var_type"					"FIELD_INTEGER"
				"bonus_movement_speed"		"25"
			}			
			"03"
			{
				"var_type"					"FIELD_INTEGER"
				"bonus_damage"				"40"
			}		
			"04"
			{
				"var_type"					"FIELD_INTEGER"
				"max_bonus_pct"				"20"
			}	
			"05"
			{
				"var_type"					"FIELD_INTEGER"
				"visibility_threshold_pct"	"35"
			}
			"06"
			{
				"var_type"					"FIELD_INTEGER"
				"invis_threshold_pct"	"1"
			}
		}
	}
	//=================================================================================================================
	// VGMAR: SilverEdge: Slark: Essence Shift
	//=================================================================================================================
	"vgmar_i_essense_shift"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"SpellImmunityType"				"SPELL_IMMUNITY_ENEMIES_YES"
		"SpellDispellableType"			"SPELL_DISPELLABLE_NO"
		"BaseClass"						"slark_essence_shift"
		"MaxLevel"						"1"

		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"				"FIELD_INTEGER"
				"agi_gain"				"1"
			}
			"02"
			{
				"var_type"				"FIELD_INTEGER"
				"stat_loss"				"0"
			}
			"03"
			{
				"var_type"				"FIELD_FLOAT"
				"duration"				"120"
			}
		}
	}
	//=================================================================================================================
	// VGMAR: Urn: Necrophos: Death Pulse
	//=================================================================================================================
	"vgmar_i_pulse"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"AbilityUnitDamageType"			"DAMAGE_TYPE_MAGICAL"	
		"SpellImmunityType"				"SPELL_IMMUNITY_ENEMIES_NO"
		"AbilitySound"					"Hero_Necrolyte.DeathPulse"
		"BaseClass"						"necrolyte_death_pulse"
		"MaxLevel"						"1"


		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastRange"				"0"
		"AbilityCastPoint"				"0.0"

		// Time		
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"0"

		// Damage.
		//-------------------------------------------------------------------------------------------------------------
		"AbilityDamage"					"0"

		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"0"

		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"				"FIELD_INTEGER"
				"area_of_effect"		"0"
			}
			"02"
			{
				"var_type"				"FIELD_INTEGER"
				"heal"					"0"
			}
			"03"
			{
				"var_type"				"FIELD_INTEGER"
				"projectile_speed"		"10000"
			}
			"04"
			{
				"var_type"		"FIELD_INTEGER"
				"health_regen"	"5"
			}		
			"05"
			{
				"var_type"		"FIELD_INTEGER"
				"mana_regen"	"5"
			}	
			"06"
			{
				"var_type"		"FIELD_FLOAT"
				"regen_duration"		"7"
			}			
			"07"
			{
				"var_type"		"FIELD_INTEGER"
				"hero_multiplier" "5"
			}
		}
	}
	//=================================================================================================================
	// VGMAR: EchoSabre: Troll Warlord: Fervor
	//=================================================================================================================
	"vgmar_i_fervor"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"SpellDispellableType"			"SPELL_DISPELLABLE_NO"
		"BaseClass"						"troll_warlord_fervor"
		"MaxLevel"						"1"
		
		// Casting
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"				"FIELD_INTEGER"
				"max_stacks"			"15"
			}
			"02"
			{
				"var_type"				"FIELD_INTEGER"
				"attack_speed"			"15"
			}
		}
	}
	//=================================================================================================================
	// VGMAR: Aegis: SkeletonKing: Reincarnation
	//=================================================================================================================
	"aegis_king_reincarnation"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"SpellDispellableType"			"SPELL_DISPELLABLE_NO"
		"AbilityUnitTargetTeam"			"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
		"AbilityUnitTargetType"			"DOTA_UNIT_TARGET_HERO"
		"SpellImmunityType"				"SPELL_IMMUNITY_ENEMIES_NO"

		"HasScepterUpgrade"			"1"
		"AbilitySound"					"Hero_SkeletonKing.Reincarnate"
		"BaseClass"						"skeleton_king_reincarnation"
		"MaxLevel"						"2"

		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"0"

		// Time		
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"240 300"

		// Stats
		//-------------------------------------------------------------------------------------------------------------
		"AbilityModifierSupportValue"	"0"	// Slow isn't the main function of this ability.
		
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"				"FIELD_FLOAT"
				"reincarnate_time"		"3.0"
			}
			"02"
			{
				"var_type"				"FIELD_INTEGER"
				"slow_radius"			"0"
			}
			"03"
			{
				"var_type"				"FIELD_INTEGER"
				"movespeed"				"0"
			}
			"04"
			{
				"var_type"				"FIELD_INTEGER"
				"attackslow_tooltip"	"0"
			}
			"05"
			{
				"var_type"				"FIELD_FLOAT"
				"slow_duration"			"0.0"
			}
			"07"
			{
				"var_type"				"FIELD_FLOAT"
				"scepter_duration"		"20"
			}
			"08"
			{
				"var_type"				"FIELD_INTEGER"
				"aura_radius"	"10"
			}
			"09"
			{
				"var_type"				"FIELD_INTEGER"
				"aura_radius_tooltip_scepter"	"10"
			}
		}
	}
	//=================================================================================================================
	// VGMAR: SatanicDomination: Underlord: AtrophyAura
	//=================================================================================================================
	"vgmar_i_atrophy_aura"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_AURA | DOTA_ABILITY_BEHAVIOR_HIDDEN | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"SpellDispellableType"			"SPELL_DISPELLABLE_NO"
		"BaseClass"						"abyssal_underlord_atrophy_aura"
		"MaxLevel"						"1"
		
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastRange"				"1200"

		"AbilitySpecial"
		{
			"01"
			{
				"var_type"						"FIELD_INTEGER"
				"radius"						"1200"
			}
			"02"
			{
				"var_type"						"FIELD_INTEGER"
				"damage_reduction_pct"			"0"
			}
			"03"
			{
				"var_type"						"FIELD_INTEGER"
				"bonus_damage_from_creep"		"1"
			}
			"04"
			{
				"var_type"						"FIELD_INTEGER"
				"bonus_damage_from_hero"		"10"
			}
			"05"
			{
				"var_type"						"FIELD_FLOAT"
				"bonus_damage_duration"			"240"
			}
			"06"
			{
				"var_type"						"FIELD_FLOAT"
				"bonus_damage_duration_scepter"		"900"
			}
		}
	}
	//=================================================================================================================
	// VGMAR: Vladmir: Skeleton King: Vampiric Aura
	//=================================================================================================================
	"vgmar_i_vampiric_aura"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"AbilityUnitTargetTeam"			"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
		"SpellDispellableType"			"SPELL_DISPELLABLE_NO"
		"BaseClass"						"skeleton_king_vampiric_aura"
		"MaxLevel"						"1"
		
		// Casting
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"				"FIELD_INTEGER"
				"vampiric_aura_radius"	"700"
			}
			"02"
			{
				"var_type"				"FIELD_INTEGER"
				"vampiric_aura"			"30"
			}
		}
	}
	//=================================================================================================================
	// VGMAR: Octarine: Obsidian Destroyer: Arcane Aura
	//=================================================================================================================
	"vgmar_i_essence_aura"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE | DOTA_ABILITY_BEHAVIOR_AURA"
		"AbilityUnitTargetTeam"			"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
		"SpellDispellableType"			"SPELL_DISPELLABLE_NO"
		"AbilitySound"					"Hero_ObsidianDestroyer.EssenceAura"
		"BaseClass"						"obsidian_destroyer_essence_aura"
		"MaxLevel"						"1"
				
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"			"FIELD_INTEGER"
				"radius"			"900"
			}
			"02"
			{
				"var_type"			"FIELD_INTEGER"
				"bonus_mana"	    "1000"
			}
			"03"
			{
				"var_type"			"FIELD_FLOAT"
				"restore_amount"	"20"
			}
			"04"
			{
				"var_type"			"FIELD_INTEGER"
				"restore_chance"		"40"
			}
			"05"
			{
				"var_type"			"FIELD_INTEGER"
				"intelligence_bonus"	"4"
			}
			"06"
			{
				"var_type"			"FIELD_INTEGER"
				"intelligence_duration"	"30"
			}
		}
	}
	//=================================================================================================================
	// VGMAR: Rapier: Phantom Assassin: DeathsKiss
	//=================================================================================================================
	"vgmar_i_deathskiss"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"SpellDispellableType"			"SPELL_DISPELLABLE_NO"
		"AbilitySound"					"Hero_PhantomAssassin.CoupDeGrace"
		"BaseClass"						"phantom_assassin_coup_de_grace"
		"MaxLevel"						"1"
		
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"					"FIELD_INTEGER"
				"crit_bonus"				"20000"
			}
			"02"
			{
				"var_type"					"FIELD_INTEGER"
				"crit_chance"				"1"
			}
		}
	}
	//=================================================================================================================
	// VGMAR: Rapier: Phantom Assassin: DeathsKiss
	//=================================================================================================================
	"vgmar_i_criticalmastery"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"SpellDispellableType"			"SPELL_DISPELLABLE_NO"
		"AbilitySound"					"Hero_PhantomAssassin.CoupDeGrace"
		"BaseClass"						"phantom_assassin_coup_de_grace"
		"MaxLevel"						"1"
		
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"					"FIELD_INTEGER"
				"crit_bonus"				"300"
			}
			"02"
			{
				"var_type"					"FIELD_INTEGER"
				"crit_chance"				"100"
			}
		}
	}
	//=================================================================================================================
	// VGMAR: Raindrop: Crystal Maiden: ManaAura
	//=================================================================================================================
	"vgmar_i_rainfall"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"AbilityUnitTargetTeam"			"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
		"SpellDispellableType"			"SPELL_DISPELLABLE_NO"
		"BaseClass"						"crystal_maiden_brilliance_aura"
		"MaxLevel"						"1"
		
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"			"FIELD_FLOAT"
				"mana_regen"		"4.0"
			}
			"02"
			{
				"var_type"			"FIELD_FLOAT"
				"mana_regen_self"	"5.0"
			}
		}
	}
	//=================================================================================================================
	// VGMAR: Item: Antimage: SpellShield
	//=================================================================================================================
	"vgmar_i_spellshield"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"SpellDispellableType"			"SPELL_DISPELLABLE_NO"
		"BaseClass"						"antimage_spell_shield"
		"MaxLevel"						"1"
		
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"						"FIELD_INTEGER"
				"spell_shield_resistance"		"35"
			}
			"02"
			{
				"var_type"				"FIELD_INTEGER"
				"scepter_cooldown"		"12"
			}
		}
	}
	//=================================================================================================================
	// VGMAR: Item: Razor: PurgeField
	//=================================================================================================================
	"vgmar_i_purgefield"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"AbilityUnitDamageType"			"DAMAGE_TYPE_MAGICAL"	
		"SpellImmunityType"				"SPELL_IMMUNITY_ENEMIES_NO"
		"SpellDispellableType"			"SPELL_DISPELLABLE_YES"
		"BaseClass"						"razor_unstable_current"
		"MaxLevel"						"1"

		// Time		
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"0.5"
				
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"				"FIELD_INTEGER"
				"movement_speed_pct"	"0"
			}
			"02"
			{
				"var_type"				"FIELD_FLOAT"
				"hit_interval"			"0.5"
			}
			"03"
			{
				"var_type"				"FIELD_FLOAT"
				"slow_duration"	"0.0"
			}
			"04"
			{
				"var_type"				"FIELD_INTEGER"
				"slow_amount"		"-0"
			}
			"05"
			{
				"var_type"				"FIELD_INTEGER"
				"damage"		"125"
			}
			"06"
			{
				"var_type"		"FIELD_INTEGER"
				"radius"		"375"
			}
		}
	}

	//=========================
	//ModifierApplyingAbilities
	//=========================
	//=================================================================================================================
	// VGMAR: Item: TrueSight
	//=================================================================================================================
	"vgmar_i_truesight"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"AbilityTextureName" "item_gem"
		"SpellImmunityType"	"SPELL_IMMUNITY_ENEMIES_YES"
		"MaxLevel"	"1"
	}


	//===================
	// CompanionAbilities
	//===================
	//Wisp
	//===============================
	// VGMAR: Companion: Wisp: Tether
	//===============================
	"vgmar_ca_wisp_tether"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"						"wisp_tether"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET"
		"AbilityUnitTargetTeam"			"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
		"AbilityUnitTargetType"			"DOTA_UNIT_TARGET_CUSTOM"
		"SpellImmunityType"				"SPELL_IMMUNITY_ENEMIES_NO"
		"SpellDispellableType"			"SPELL_DISPELLABLE_NO"
		"AbilityTextureName"			"custom/companion_wisp_tether"

		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"				"0.001 0.001 0.001 0.001"
		"AbilityCastAnimation"			"ACT_INVALID"

		// Time		
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"1.0 1.0 1.0 1.0"
		"AbilityDuration"				"999.0 999.0 999.0 999.0"

		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"0 0 0 0"

		// Cast Range
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastRange"				"1800 1800 1800 1800"

		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"					"FIELD_INTEGER"
				"radius"					"1800 1800 1800 1800"
			}
			"02"
			{
				"var_type"					"FIELD_INTEGER"
				"movespeed"					"20 20 20 20"
			}
			"03"
			{
				"var_type"					"FIELD_INTEGER"
				"latch_distance"			"700 700 700 700"
			}
			"04"
			{
				"var_type"					"FIELD_INTEGER"
				"latch_speed"				"1000 1000 1000 1000"
			}
			"05"
			{
				"var_type"					"FIELD_FLOAT"
				"tether_duration"			"999.0 999.0 999.0 999.0"
			}
			"06"
			{
				"var_type"					"FIELD_FLOAT"
				"tether_heal_amp"			"1.5"
			}
			"07"
			{
				"var_type"					"FIELD_INTEGER"
				"slow"			"0"
			}
			"08"
			{
				"var_type"					"FIELD_INTEGER"
				"attackslow_tooltip"			"0"
			}
			"09"
			{
				"var_type"					"FIELD_FLOAT"
				"stun_duration"				"0 0 0 0"
			}
		}
	}
	
	//===================================
	// VGMAR: Companion: Wisp: Overcharge
	//===================================
	"vgmar_ca_wisp_overcharge"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_TOGGLE"
		"SpellDispellableType"			"SPELL_DISPELLABLE_NO"
		"BaseClass"						"wisp_overcharge"
		"AbilityTextureName"			"custom/companion_wisp_overcharge"

		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"				"0 0 0 0"
   		"AbilityCastAnimation"			"ACT_INVALID"

		// Time		
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"0.0"

		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"					"FIELD_INTEGER"
				"bonus_attack_speed"		"50 60 70 80"
			}
			"02"
			{
				"var_type"					"FIELD_INTEGER"
				"bonus_damage_pct"			"-15 -25 -35 -45"
			}
			"03"
			{
				"var_type"					"FIELD_FLOAT"
				"drain_interval"			"0.2 0.2 0.2 0.2"
			}
			"04"
			{
				"var_type"					"FIELD_FLOAT"
				"drain_pct"					"0.06"
			}
			"05"
			{
				"var_type"					"FIELD_FLOAT"
				"drain_pct_tooltip"			"6.0"
			}
		}
	}
	//=================================================================================================================
	// VGMAR: Companion: Wisp: Relocate
	//=================================================================================================================
	"vgmar_ca_wisp_relocate"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"						"ability_datadriven"
		"AbilityType"					"DOTA_ABILITY_TYPE_ULTIMATE"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_POINT"
		"SpellDispellableType"			"SPELL_DISPELLABLE_NO"
		"FightRecapLevel"				"1"
		"AbilitySound"					"Hero_Wisp.Relocate"
		"AbilityTextureName"			"custom/companion_wisp_relocate"

		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"				"0 0 0"
 		"AbilityCastAnimation"			"ACT_INVALID"

		// Time		
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"120.0 100.0 80.0"

		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"100 100 100"
		
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"					"FIELD_FLOAT"
				"cast_delay"				"2.5 2.25 2.0"
			}
			"02"
			{
				"var_type"					"FIELD_FLOAT"
				"return_time"				"12.0 12.0 12.0"
			}
			// Extra variables
			"03"
			{
				"var_type"					"FIELD_INTEGER"
				"destroy_tree_radius"		"300"
			}
			"04"
			{
				"var_type"					"FIELD_INTEGER"
				"vision_radius"				"64"
			}
		}
		
		// Data driven
		//-------------------------------------------------------------------------------------------------------------
		"precache"
		{
			"soundfile"					"soundevents/game_sounds_heroes/game_sounds_wisp.vsndevts"
			"particle"					"particles/units/heroes/hero_wisp/wisp_relocate_channel.vpcf"
			"particle"					"particles/units/heroes/hero_wisp/wisp_relocate_marker.vpcf"
			"particle"					"particles/units/heroes/hero_wisp/wisp_relocate_marker_endpoint.vpcf"
			"particle"					"particles/units/heroes/hero_wisp/wisp_relocate_teleport.vpcf"
			"particle"					"particles/units/heroes/hero_wisp/wisp_relocate_timer.vpcf"
		}
		
		"OnSpellStart"
		{
			"FireSound"
			{
				"EffectName"		"Hero_Wisp.Relocate"
				"Target"			"CASTER"
			}
			
			"RunScript"
			{
				"ScriptFile"		"abilities/hero/wisp/wisp_relocate.lua"
				"Function"			"CastRelocate"
				"Target"			"POINT"
				
				"tether_ability"				"vgmar_ca_wisp_tether"
				"tether_modifier"				"modifier_wisp_tether"
				"tether_ally_modifier"			"modifier_wisp_tether_haste"
			}
			
			"ApplyModifier"
			{
				"ModifierName"		"modifier_relocate_channel_datadriven"
				"Target"			"CASTER"
			}
		}
		
		"Modifiers"
		{
			"modifier_relocate_channel_datadriven"
			{
				"Duration"	"%cast_delay"
				
				"OnCreated"
				{
					"AttachEffect"
					{
						"EffectName"		"particles/units/heroes/hero_wisp/wisp_relocate_channel.vpcf"
						"EffectAttachType"	"attach_hitloc"
						"Target"			"TARGET"
						
						"ControlPointEntities"
						{
							"TARGET"	"attach_hitloc"
						}
					}
				
					"RunScript"
					{
						"ScriptFile"	"abilities/hero/wisp/wisp_relocate.lua"
						"Function"		"CreateMarkerEndpoint"
						
						"endpoint_particle"		"particles/units/heroes/hero_wisp/wisp_relocate_marker_endpoint.vpcf"
						
						"vision_radius"			"%vision_radius"
						"vision_duration"		"%cast_delay"
					}
				}
				
				"OnStateChanged"
				{
					"RunScript"
					{
						"ScriptFile"		"abilities/hero/wisp/wisp_relocate.lua"
						"Function"			"CheckToInterrupt"
						
						"channel_modifier"	"modifier_relocate_channel_datadriven"
					}
				}
				
				"OnDestroy"
				{
					"RunScript"
					{
						"ScriptFile"	"abilities/hero/wisp/wisp_relocate.lua"
						"Function"		"DestroyMarkerEndpoint"
					}
					
					"RunScript"
					{
						"ScriptFile"	"abilities/hero/wisp/wisp_relocate.lua"
						"Function"		"TryToTeleport"
						
						"timer_modifier"	"modifier_relocate_timer_datadriven"
					}
				}
			}
			
			"modifier_relocate_return_datadriven"
			{
				// Visible from otheres as compared with modifier_relocate_timer_datadriven
			}
			
			"modifier_relocate_timer_datadriven"
			{
				"IsHidden"	"1"
				"Duration"	"%return_time"		// Timer should be hidden
				
				"OnCreated"
				{
					"ApplyModifier"
					{
						"ModifierName"	"modifier_relocate_return_datadriven"
						"Target"		"TARGET"
					}
					
					"RunScript"
					{
						"ScriptFile"	"abilities/hero/wisp/wisp_relocate.lua"
						"Function"		"Teleportation_PreDestroyTree"
						
						"tether_ability"				"vgmar_ca_wisp_tether"
						"tether_modifier"				"modifier_wisp_tether"
						"tether_ally_modifier"			"modifier_wisp_tether_haste"
						
						"teleport_particle"		"particles/units/heroes/hero_wisp/wisp_relocate_teleport.vpcf"
					}
					
					"DestroyTrees"
					{
						"Target"		"CASTER"
						"Radius"		"%destroy_tree_radius"
					}
					
					"RunScript"
					{
						"ScriptFile"	"abilities/hero/wisp/wisp_relocate.lua"
						"Function"		"Teleportation_PostDestroyTree"
						
						"return_time"		"%return_time"
						
						"marker_particle"	"particles/units/heroes/hero_wisp/wisp_relocate_marker.vpcf"
						"timer_particle"	"particles/units/heroes/hero_wisp/wisp_relocate_timer.vpcf"
					}
					
					"FireSound"
					{
						"EffectName"	"Hero_Wisp.ReturnCounter"
						"Target"		"CASTER"
					}
				}
				
				"ThinkInterval"		"1.0"
				"OnIntervalThink"
				{
					"RunScript"
					{
						"ScriptFile"	"abilities/hero/wisp/wisp_relocate.lua"
						"Function"		"UpdateTimer"
					}
				}
				
				"OnDestroy"
				{
					"RunScript"
					{
						"ScriptFile"	"abilities/hero/wisp/wisp_relocate.lua"
						"Function"		"TryReturningTeleportation"
						
						"returning_modifier"	"modifier_relocate_returning_teleport_datadriven"
					}
					
					"RunScript"
					{
						"ScriptFile"		"abilities/hero/wisp/wisp_relocate.lua"
						"Function"			"StopSound"
						"Target"			"CASTER"
						"sound_name"		"Hero_Wisp.ReturnCounter"
					}
					
					"RemoveModifier"
					{
						"ModifierName"	"modifier_relocate_return_datadriven"
						"Target"		"TARGET"
					}
				}
			}
			
			"modifier_relocate_returning_teleport_datadriven"
			{
				"OnCreated"
				{
					"RunScript"
					{
						"ScriptFile"	"abilities/hero/wisp/wisp_relocate.lua"
						"Function"		"ReturningTeleportation_PreDestroyTree"
						
						"tether_ability"				"vgmar_ca_wisp_tether"
						"tether_modifier"				"modifier_wisp_tether"
						"tether_ally_modifier"			"modifier_wisp_tether_haste"
						
						"teleport_particle"		"particles/units/heroes/hero_wisp/wisp_relocate_teleport.vpcf"
					}
					
					"DestroyTrees"
					{
						"Target"		"CASTER"
						"Radius"		"%destroy_tree_radius"
					}
					
					"RunScript"
					{
						"ScriptFile"	"abilities/hero/wisp/wisp_relocate.lua"
						"Function"		"ReturningTeleportation_PostDestroyTree"
					}
					
					"FireSound"
					{
						"EffectName"	"Hero_Wisp.Return"
						"Target"		"CASTER"
					}
					
					"RemoveModifier"
					{
						"ModifierName"	"modifier_relocate_returning_teleport_datadriven"
						"Target"		"CASTER"
					}
				}
			}
		}
	}

	//=================================
	// Wisp: Mechanics Toggle Abilities
	//=================================
	//==============
	// Toggle Tether
	//==============
	"vgmar_ai_companion_wisp_toggle_tether"
	{
		"BaseClass" "ability_datadriven"
		"AbilityBehavior" "DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_TOGGLE | DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING"
		"AbilityTextureName" "custom/aiautotether"
		"MaxLevel" "1"
		"ResetToggleOnRespawn" "0"
		"AbilityProcsMagicStick" "0"
	}
	//===========
	// Toggle Hit
	//===========
	"vgmar_ai_companion_wisp_toggle_autohit"
	{
		"BaseClass" "ability_datadriven"
		"AbilityBehavior" "DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_TOGGLE | DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING"
		"AbilityTextureName" "custom/aiautoattacktoggle"
		"MaxLevel" "1"
		"ResetToggleOnRespawn" "0"
		"AbilityProcsMagicStick" "0"
	}
	//===============
	// Toggle Scepter
	//===============
	"vgmar_ai_companion_wisp_toggle_scepter"
	{
		"BaseClass" "ability_datadriven"
		"AbilityBehavior" "DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_TOGGLE | DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING"
		"AbilityTextureName" "custom/aisceptertoggle"
		"MaxLevel" "1"
		"ResetToggleOnRespawn" "0"
		"AbilityProcsMagicStick" "0"
	}
	
	//======================
	//VisualAbilityModifiers
	//======================
	//=================================================================================================================
	// VGMAR: Courier: Upgrade: Level Visual
	//=================================================================================================================
	"vgmar_util_courier_level"
	{
		"BaseClass" "ability_datadriven"
		"AbilityBehavior" "DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"AbilityTextureName" "courier_burst"
		"SpellImmunityType" "SPELL_IMMUNITY_ENEMIES_YES"
		"MaxLevel" "1"

		"Modifiers" {
			"modifier_vgmar_util_courier_level" {
				"Passive" "1"
				"IsHidden" "0"
			}
		}
	}
}